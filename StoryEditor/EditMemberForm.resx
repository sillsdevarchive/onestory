<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="helpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="radioButtonEnglishBackTranslator.HelpString" xml:space="preserve">
    <value>This member (someone outside the crafting team) helps the team by making an English back-translation of the project documentation *after* the project facilitator has entered the UNS’s back-translation, etc., in the national language. The English back-translator will translate the story lines (i.e. the national language back-translation of the story), the testing questions, answers, and retellings from the national language into English for the sake of the consultants. They do this during a special intermediate state after the project facilitator has finished with his or her tasks and before the story goes to the consultant. Later when the editing responsibility goes back from the consultant(s) to the team, the English back-translator will once again have a special intermediate state to translate the consultant's responses into a language that the crafting team knows. NOTE: if your project only uses an English back-translation (i.e. it is not configured to show the story language or a national back-translation), then you don’t want an English back-translator member. The person creating the English back-translation would simply be a UNS.</value>
  </data>
  <data name="radioButtonProjectFacilitator.HelpString" xml:space="preserve">
    <value>The project facilitator is the person responsible for the documentation of a OneStory project. They type in the stories/back-translations, form the testing questions, etc. For mother-tongue teams, this is often the crafter of the story, but a separate member role of project facilitator is needed, because only a project facilitator can create new stories, type in back-translation, testing responses, etc.</value>
  </data>
  <data name="radioButtonConsultantInTraining.HelpString" xml:space="preserve">
    <value>The member (usually only one/team) who provides exegetical feedback to the team on their stories. Currently, if this person is an independent consultant, then he or she will need to create a second member (with a different name) as the role of coach.</value>
  </data>
  <data name="radioButtonFirstPassMentor.HelpString" xml:space="preserve">
    <value>A first-pass mentor is a person being mentored by a consultant, but who gives initial feedback on a story prior to the story going to the consultant. This is often someone who knows a closely related language, and who has some storying or translation background, but who may not be experienced enough to be a consultant-in-training.</value>
  </data>
  <data name="radioButtonUNS.HelpString" xml:space="preserve">
    <value>An uninitiated native speaker (UNS) is a mother-tongue speaker of the story language, who is representative of the target audience of the story (see the "Panorama" menu, "Show" command and look on the "Front Matter" tab under the "Target audience" heading). He or she should be someone who is unfamiliar with the story, and it is best if they have very little previous knowledge about the Bible in general. The UNS will back-translate the story into another language (either a national/regional language or English), answer story testing questions, and/or give a retelling test of the story</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAQAAAABAAoAQAAJgAAACAgEAAAAAQA6AIAAE4BAAAoAAAAEAAAACAAAAABAAQAAAAAAIAA
        AAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAAAzAAAAAAAAMzMAAAAAADMzMzAAAAADMzMzMwAAAAMz//8zAAAAMz//P/MwAAAzP/M/8zAAAAM/
        8//zAAAAAzP//zMAAAAAMzMzMAAAAAAAMzAAAAAA/8EAAP+YAAD/gAAA/8AAAP75AAD84wAA8MkAAMBB
        AACAPwAAgD8AAAAfAAAAHwAAgD8AAIA/AADAfwAA8f8AACgAAAAgAAAAQAAAAAEABAAAAAAAAAIAAAAA
        AAAAAAAAEAAAABAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAzAAAAAAAAAA
        AAAAAAAAADMwAAAAAAAAAAAAAAAAAAMzMAAAAAAAAAAAAAAAAAADMzAAAAAAAAAAAAADMzMAMzMAAAAA
        AAAAAAADMzMzMzMzAAAAAAAAAAADMzMzMzMzMwAAAAAAAAAAMzP///MzMzMAAAAAAAAAAzM//zP/MzMz
        AAAAAAAAADMzP/MzP/MzMwAAAAAAAAAzM/8zMzP/MzMAAAAAAAADMzP/MzMz/zMzMAAAAAAAAzMz/zMz
        M/8zMzAAAAAAAAMzM/8zMzP/MzMwAAAAAAAAMzP/MzMz/zMzAAAAAAAAADMz/z//P/MzMwAAAAAAAAAA
        Mz//8//zMzAAAAAAAAAAAAMzM///MzAAAAAAAAAAAAAAAzMzMzMAAAAAAAAAAAAAAAADMzMwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////
        ////////////////////////////////9////+f////H////h////4f//4MOD/4ADOf4AAgT8AAIQ+AA
        CMPAAAwDwAAPx4AABx+AAAR/gAAEz8AADg/AAA//8AAf//gAf//+AP///4H//////////////////w==
</value>
  </data>
</root>