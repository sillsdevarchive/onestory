<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="helpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>355, 17</value>
  </metadata>
  <metadata name="helpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>355, 17</value>
  </metadata>
  <metadata name="helpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>355, 17</value>
  </metadata>
  <metadata name="helpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>355, 17</value>
  </metadata>
  <metadata name="helpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>355, 17</value>
  </metadata>
  <metadata name="helpProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>355, 17</value>
  </metadata>
  <data name="textBoxVernSentFullStop.HelpString" xml:space="preserve">
    <value>Enter the punctuation characters used in this language to end a sentence. For example, in English, it is the period '.', and in Hindi, it is the Devanagari Danda, '।' plus the '?!:' characters. You can also enter other sentence final punctuation that may be special in your language (e.g. in Arabic, the question mark '؟'). There should be no spaces between characters, and be sure the first one is the normal (most-common) full stop character</value>
  </data>
  <data name="textBoxNationalBTSentFullStop.HelpString" xml:space="preserve">
    <value>Enter the punctuation characters used in this language to end a sentence. For example, in English, it is the period '.', and in Hindi, it is the Devanagari Danda, '।' plus the '?!:' characters. You can also enter other sentence final punctuation that may be special in your language (e.g. in Arabic, the question mark '؟'). There should be no spaces between characters, and be sure the first one is the normal (most-common) full stop character.</value>
  </data>
  <data name="labelReturnToTeamMemberTabInstructions.Text" xml:space="preserve">
    <value>This tab window is to configure which languages you want the project to maintain. If you want the Project Facilitator to type the story in the story language, then check the box below the 'Story Language' field and configure the information in the boxes below it. If you want to use a national or regional language for a back-translation, then check the box below the 'National BT Language' field and configure the information in the boxes below it. If you want to use English as a second back-translation language, then check the box that says, 'Project will use an English BT?' When you're finished entering this information, click on the 'Team Members' tab and choose your name to Login. Note, you must be logged in as a Project Facilitator to type the story in these languages.</value>
  </data>
  <data name="listBoxTeamMembers.HelpString" xml:space="preserve">
    <value>This list shows all the members of the team. To edit stories, you generally need to be logged in as a 'Project Facilitator'. So whichever member of the team will be typing in the documentation needs to have a 'Project Facilitator' role. The other main editors are a Consultant-in-training (for the Consultant Notes Pane), or a Coach (for the Coach Notes pane). The Crafter and UNS member types are respectively for the names of the one(s) who crafted the story and the testing helper(s). You will need to indicate who did these roles as you progress in the documentation process, but you wouldn't log in as one of them since they can’t edit the project file. To log in, select your name from the list of member names and click "Login" button.</value>
  </data>
  <metadata name="fontDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>102, 17</value>
  </metadata>
  <metadata name="folderBrowserDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>204, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAQAAAABAAoAQAAJgAAACAgEAAAAAQA6AIAAE4BAAAoAAAAEAAAACAAAAABAAQAAAAAAIAA
        AAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADAwMAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAAAzAAAAAAAAMzMAAAAAADMzMzAAAAADMzMzMwAAAAMz//8zAAAAMz//P/MwAAAzP/M/8zAAAAM/
        8//zAAAAAzP//zMAAAAAMzMzMAAAAAAAMzAAAAAA/8EAAP+YAAD/gAAA/8AAAP75AAD84wAA8MkAAMBB
        AACAPwAAgD8AAAAfAAAAHwAAgD8AAIA/AADAfwAA8f8AACgAAAAgAAAAQAAAAAEABAAAAAAAAAIAAAAA
        AAAAAAAAEAAAABAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAzAAAAAAAAAA
        AAAAAAAAADMwAAAAAAAAAAAAAAAAAAMzMAAAAAAAAAAAAAAAAAADMzAAAAAAAAAAAAADMzMAMzMAAAAA
        AAAAAAADMzMzMzMzAAAAAAAAAAADMzMzMzMzMwAAAAAAAAAAMzP///MzMzMAAAAAAAAAAzM//zP/MzMz
        AAAAAAAAADMzP/MzP/MzMwAAAAAAAAAzM/8zMzP/MzMAAAAAAAADMzP/MzMz/zMzMAAAAAAAAzMz/zMz
        M/8zMzAAAAAAAAMzM/8zMzP/MzMwAAAAAAAAMzP/MzMz/zMzAAAAAAAAADMz/z//P/MzMwAAAAAAAAAA
        Mz//8//zMzAAAAAAAAAAAAMzM///MzAAAAAAAAAAAAAAAzMzMzMAAAAAAAAAAAAAAAADMzMwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////
        ////////////////////////////////9////+f////H////h////4f//4MOD/4ADOf4AAgT8AAIQ+AA
        CMPAAAwDwAAPx4AABx+AAAR/gAAEz8AADg/AAA//8AAf//gAf//+AP///4H//////////////////w==
</value>
  </data>
</root>